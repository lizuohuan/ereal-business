<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.magic.ereal.business.mapper.IJobTypeMapper" >


    <resultMap id="BaseJobType" type="com.magic.ereal.business.entity.JobType">
        <result column="id" property="id" javaType="java.lang.Integer"/>
        <result column="jobTypeName" property="jobTypeName" javaType="java.lang.String"/>
        <result column="jobTypeTime" property="jobTypeTime" javaType="java.lang.Double"/>
        <result column="transactionSubId" property="transactionSubId" javaType="java.lang.Integer"/>
        <result column="departmentId" property="departmentId" javaType="java.lang.Integer"/>
        <result column="isValid" property="isValid" javaType="java.lang.Integer"/>
    </resultMap>


    <select id="queryJobTypeByTransactions" resultMap="BaseJobType">
        SELECT * FROM `job_type`
        WHERE 1=1
        <if test="userId != null">
            AND `departmentId`= (SELECT `department_id` FROM `users` WHERE `id`=#{userId})
        </if>
        AND `transactionSubId` IN
        <foreach collection="transactionIds" index="index" item="transaction" open="(" close=")" separator=",">
            #{transaction}
        </foreach>
    </select>

    <select id="queryJobTypeByTransaction" resultMap="BaseJobType">
        SELECT * FROM `job_type`
        WHERE 1=1
        <if test="transaction != null">
            AND `transactionSubId`=#{transaction}
        </if>
        <if test="userId != null">
            AND `departmentId`= (SELECT `department_id` FROM `users` WHERE `id`=#{userId})
        </if>
    </select>

    <select id="queryJobTypeByTransactionMap" parameterType="map" resultMap="BaseJobType">
        SELECT * FROM `job_type`
        WHERE 1=1
        AND isValid = 1
        <if test="transaction != null">
            AND `transactionSubId`=#{transaction}
        </if>
        <if test="userId != null">
            AND `departmentId`= (SELECT `department_id` FROM `users` WHERE `id`=#{userId})
        </if>
    </select>

    <insert id="batchAddJobType">
        INSERT INTO `job_type`
        (`jobTypeName`,`jobTypeTime`,`transactionSubId`,`departmentId`,isValid)
        VALUES
        <foreach collection="jobTypes" index="index" item="jobType" separator=",">
            (#{jobType.jobTypeName},#{jobType.jobTypeTime},#{jobType.transactionSubId},#{jobType.departmentId},1)
        </foreach>
    </insert>

    <insert id="addJobType">
        INSERT INTO `job_type`
        (`jobTypeName`,`jobTypeTime`,`transactionSubId`,`departmentId`,isValid)
        VALUES
        (#{jobType.jobTypeName},#{jobType.jobTypeTime},#{jobType.transactionSubId},#{jobType.departmentId},1)
    </insert>

    <update id="updateJobType">
        UPDATE `job_type`
        <set>
            <if test="jobType.isValid != null">
                `isValid`=#{jobType.isValid},
            </if>
            <if test="jobType.transactionSubId != null">
                `transactionSubId`=#{jobType.transactionSubId},
            </if>
            <if test="jobType.departmentId != null">
                `departmentId`=#{jobType.departmentId},
            </if>
            <if test="jobType.jobTypeTime != null">
                `jobTypeTime`=#{jobType.jobTypeTime},
            </if>
            <if test="jobType.jobTypeName != null">
                `jobTypeName`=#{jobType.jobTypeName},
            </if>
        </set>
        where id = #{jobType.id}
    </update>

    <select id="getJobTypeByTransactionForWeb" resultMap="BaseJobType">
        SELECT jt.*,d.departmentName FROM `job_type` jt LEFT JOIN department d ON jt.departmentId = d.id
        WHERE 1=1
        AND jt.isValid = 1
        <if test="transaction != null">
            AND `transactionSubId`=#{transaction}
        </if>
        <if test="departmentId != null">
            AND `departmentId`= #{departmentId}
        </if>
    </select>

    <select id="queryJobTypeById" resultMap="BaseJobType">
        SELECT
        j.*, d.departmentName,
        t.transactionSubName,
        tt.transactionName
        FROM
        job_type j
        LEFT JOIN department d ON j.departmentId = d.id
        LEFT JOIN transactionsub t ON j.transactionSubId = t.id
        LEFT JOIN transactiontype tt ON tt.id = t.transactionTypeId
        WHERE j.id = #{id}
    </select>

    <select id="list" resultMap="BaseJobType" parameterType="map">
        SELECT
        j.*, d.departmentName,
        t.transactionSubName,
        tt.transactionName
        FROM
        job_type j
        LEFT JOIN department d ON j.departmentId = d.id
        LEFT JOIN transactionsub t ON j.transactionSubId = t.id
        LEFT JOIN transactiontype tt ON tt.id = t.transactionTypeId
        WHERE 1=1
        <if test="transaction != null">
            AND j.`transactionSubId`=#{transaction}
        </if>
        <if test="departmentId != null">
            AND j.`departmentId`= #{departmentId}
        </if>
        <if test="companyId != null">
            AND d.companyId = #{companyId}
        </if>
        <if test="jobTypeName != null and jobTypeName != ''">
            AND j.jobTypeName LIKE '%${jobTypeName}%'
        </if>
        ORDER BY
        <if test="pageArgs != null">
            <if test="pageArgs.column != null and pageArgs.column != ''">
                ${pageArgs.column} ${pageArgs.order},
            </if>
        </if>
        j.`id` DESC
        <if test="pageArgs != null">
            limit #{pageArgs.pageStart}, #{pageArgs.pageSize}
        </if>
    </select>

</mapper>